/* config.h  Generated by cmake.  */

/********************************************************************
* Description: config.h
*
*	Common defines used in many emc2 source files.
*       To add to this file, edit Section 4 in configure.ac
*       and then run autoheader.
*
* Author: Autogenerated by cmake
* License: LGPL Version 2
* System: Linux
*
* Copyright (c) 2019 All rights reserved.
********************************************************************/
#ifndef EMC2_CONFIG_H
#define EMC2_CONFIG_H

/* LINELEN is used throughout for buffer sizes, length of file name strings,
   etc. Let's just have one instead of a multitude of defines all the same. */
#define LINELEN 255
/* Used in a number of places for sprintf() buffers. */
#define BUFFERLEN 80

#define MM_PER_INCH 25.4
#define INCH_PER_MM (1.0/25.4)

/* RTAPI array sizes */
#define RTAPI_MAX_MODULES	64
#define RTAPI_MAX_TASKS		64
#define RTAPI_MAX_SHMEMS	32

#define MAX_INSTANCES           16

// default size of the HAL data segment
// can be overridden by the rtapi.so/ko module param hal_size=<n>
#define HAL_SIZE                262000

// minimum memlock limit
// see http://wiki.linuxcnc.org/cgi-bin/wiki.pl?LockedMemory
// edit /etc/security/limits.conf to read:
//  *       -    memlock 20480
#define RLIMIT_MEMLOCK_RECOMMENDED (20480*1024lu)

// default size of the thread stack size passed to rtapi_task_new()
// in hal_create_thread()
// can be overridden by an option to rtapi_msgd
#define HAL_STACKSIZE           32768

// a pseudo-flavor id to indicate ulapi<flavor>.so is not yet loaded
// not a build target, just a state indicator for ulapi_autoload.c
#define RTAPI_NOTLOADED_NAME  "not-yet-loaded"
#define RTAPI_NOTLOADED_ID    99

// format of zeroMQ IPC socket pathnames
// pass: RUNDIR, rtapi_instance, service name, uuid
// service name is: log, rtapi, halrcomp etc
#define ZMQIPC_FORMAT "ipc://%s/%d.%s.%s"


// flavor IDs for the various threads systems
// and conditional to set thread system and build_sys macros
// alter these in configure.ac Subsection 2.0
#define RTAPI_POSIX_ID @RTAPI_POSIX_ID@
#define RTAPI_POSIX_NAME "@RTAPI_POSIX_NAME@"
#define RTAPI_RT_PREEMPT_ID @RTAPI_RT_PREEMPT_ID@
#define RTAPI_RT_PREEMPT_NAME "@RTAPI_RT_PREEMPT_NAME@"
#define RTAPI_XENOMAI_ID @RTAPI_XENOMAI_ID@
#define RTAPI_XENOMAI_NAME "@RTAPI_XENOMAI_NAME@"
#define RTAPI_XENOMAI_KERNEL_ID @RTAPI_XENOMAI_KERNEL_ID@
#define RTAPI_XENOMAI_KERNEL_NAME "@RTAPI_XENOMAI_KERNEL_NAME@"
#define RTAPI_RTAI_KERNEL_ID @RTAPI_RTAI_KERNEL_ID@
#define RTAPI_RTAI_KERNEL_NAME "@RTAPI_RTAI_KERNEL_NAME@"

#if ! defined(THREAD_FLAVOR_ID)
// this isn't allowed when building RTAPI
#ifdef RTAPI
#error RTAPI defined but THREAD_FLAVOR_ID not defined
#endif
#elif THREAD_FLAVOR_ID == RTAPI_POSIX_ID
#  define RTAPI_POSIX
#  define THREAD_FLAVOR_NAME "@RTAPI_POSIX_NAME@"
#  define BUILD_SYS_USER_DSO
#  define THREADS_HEADERS <rt-preempt.h>
#elif THREAD_FLAVOR_ID == RTAPI_RT_PREEMPT_ID
#  define RTAPI_RT_PREEMPT
#  define THREAD_FLAVOR_NAME "@RTAPI_RT_PREEMPT_NAME@"
#  define BUILD_SYS_USER_DSO
#  define THREADS_HEADERS <rt-preempt.h>
#elif THREAD_FLAVOR_ID == RTAPI_XENOMAI_ID
#  define RTAPI_XENOMAI
#  define THREAD_FLAVOR_NAME "@RTAPI_XENOMAI_NAME@"
#  define BUILD_SYS_USER_DSO
#  define THREADS_HEADERS <xenomai.h>
#elif THREAD_FLAVOR_ID == RTAPI_XENOMAI_KERNEL_ID
#  define RTAPI_XENOMAI_KERNEL
#  define THREAD_FLAVOR_NAME "@RTAPI_XENOMAI_KERNEL_NAME@"
#  define BUILD_SYS_KBUILD
#  define THREADS_HEADERS <xenomai-kernel.h>
#elif THREAD_FLAVOR_ID == RTAPI_RTAI_KERNEL_ID
#  define RTAPI_RTAI_KERNEL
#  define THREAD_FLAVOR_NAME "@RTAPI_RTAI_KERNEL_NAME@"
#  define BUILD_SYS_KBUILD
#  define THREADS_HEADERS <rtai-kernel.h>
#else
#error unknown value for THREAD_FLAVOR_ID
#endif



/* build hardware drivers */
#cmakedefine BUILD_DRIVERS

/* build emcweb UI */
#cmakedefine BUILD_EMCWEB

/* build programming examples */
#cmakedefine BUILD_EXAMPLES

/* build NML dependent parts */
#cmakedefine BUILD_NMLDEP

/* Directory for binaries */
#cmakedefine EMC2_BIN_DIR	"@CMAKE_INSTALL_PREFIX@/bin"

/* Default nml file */
#cmakedefine EMC2_DEFAULT_NMLFILE

/* Default tooltable file */
#cmakedefine EMC2_DEFAULT_TOOLTABLE

/* Prefix or RIP directory */
#cmakedefine EMC2_HOME

/* Directory for images */
#cmakedefine EMC2_IMAGE_DIR

/* Directory for nc files */
#cmakedefine EMC2_NCFILES_DIR

/* Directory for po/mo translation files */
#cmakedefine EMC2_PO_DIR	"@CMAKE_INSTALL_PREFIX@/share/machinekit/locale"

/* Directory for ulapi shared objects */
#cmakedefine EMC2_RTLIB_DIR	"@CMAKE_INSTALL_PREFIX@/lib/machinekit"

/* SHA valid when configure was run */
#cmakedefine GIT_CONFIG_SHA	"@GIT_CONFIG_SHA@"

/* Git version tag */
#cmakedefine GIT_VERSION	"@GIT_VERSION@"

/* avahi mDNS client library available */
#cmakedefine HAVE_AVAHI

/* Define to 1 if you have the <backtrace.h> header file. */
#cmakedefine HAVE_BACKTRACE_H	1

/* define if the Boost library is available */
#cmakedefine HAVE_BOOST

/* define if the Boost::Python library is available */
#cmakedefine HAVE_BOOST_PYTHON

/* define if the Boost::Serialization library is available */
#cmakedefine HAVE_BOOST_SERIALIZATION

/* define if the Boost::System library is available */
#cmakedefine HAVE_BOOST_SYSTEM

/* define if the Boost::Thread library is available */
#cmakedefine HAVE_BOOST_THREAD

/* Use concurrencykit */
#cmakedefine HAVE_CK

/* Define to 1 if you have the `clock_getres' function. */
#cmakedefine HAVE_CLOCK_GETRES

/* define if the compiler supports basic C++11 syntax */
#cmakedefine HAVE_CXX11

/* zeroMQ czmq library available */
#cmakedefine HAVE_CZMQ

/* Define to 1 if you have the <GL/glu.h> header file. */
#cmakedefine HAVE_GL_GLU_H	1

/* Define to 1 if you have the <GL/gl.h> header file. */
#cmakedefine HAVE_GL_GL_H	1

/* gtk > 2.4 available HAVE_GTK set */
#cmakedefine HAVE_GTK

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H	1

/* jansson JSON C bindings available */
#cmakedefine HAVE_JANSSON

/* libbacktrace available */
#cmakedefine HAVE_LIBBACKTRACE

/* Define to 1 if you have the <libbacktrace/backtrace.h> header file. */
#cmakedefine HAVE_LIBBACKTRACE_BACKTRACE_H	1

/* libcgroup library available */
#cmakedefine HAVE_LIBCGROUP

/* Define to 1 if you have the `GL' library (-lGL). */
#cmakedefine HAVE_LIBGL

/* Define to 1 if you have the `intl' library (-lintl). */
#cmakedefine HAVE_LIBINTL

/* Define to 1 if you have the <libintl.h> header file. */
#cmakedefine HAVE_LIBINTL_H	1

/* Define to 1 if you have the `ncurses' library (-lncurses). */
#cmakedefine HAVE_LIBNCURSES

/* libudev installed and available */
#cmakedefine HAVE_LIBUDEV

/* Define to 1 if you have the `Xaw' library (-lXaw). */
#cmakedefine HAVE_LIBXAW

/* Define to 1 if you have the `Xinerama' library (-lXinerama). */
#cmakedefine HAVE_LIBXINERAMA

/* Define to 1 if you have the <locale.h> header file. */
#cmakedefine HAVE_LOCALE_H	1

/* if lttng-ust support is available */
#cmakedefine HAVE_LTTNG_UST

/* libwebsockets library available */
#cmakedefine HAVE_LWS

/* Define to 1 if you have the <memory.h> header file. */
#cmakedefine HAVE_MEMORY_H	1

/* Define to 1 if you have the <ncurses.h> header file. */
#cmakedefine HAVE_NCURSES_H	1

/* Build POSIX threads */
#cmakedefine HAVE_POSIX_THREADS

/* protobuf library available */
#cmakedefine HAVE_PROTOBUF

/* If available, contains the Python version number currently in use. */
#cmakedefine HAVE_PYTHON	"@HAVE_PYTHON@"

/* Define to 1 if you have the 'readline' library (-lreadline) and required
   headers */
#cmakedefine HAVE_READLINE

/* Define to 1 if you have the <readline/history.h> header file. */
#cmakedefine HAVE_READLINE_HISTORY_H	1

/* Define to 1 if you have the <readline/readline.h> header file. */
#cmakedefine HAVE_READLINE_READLINE_H	1

/* Build RTAI threads */
#cmakedefine HAVE_RTAI_KERNEL_THREADS

/* Build RT_PREEMPT threads */
#cmakedefine HAVE_RT_PREEMPT_THREADS

/* Define to 1 if you have the `semtimedop' function. */
#cmakedefine HAVE_SEMTIMEDOP

/* Define to 1 if you have the `setlocale' function. */
#cmakedefine HAVE_SETLOCALE

/* Define to 1 if sincos is available. */
#cmakedefine HAVE_SINCOS

/* libssl library available */
#cmakedefine HAVE_SSL

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H	1

/* Define to 1 if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB_H	1

/* Define to 1 if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H	1

/* Define to 1 if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H	1

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H	1

/* Define to 1 if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H	1

/* Define to 1 if you have <sys/wait.h> that is POSIX.1 compatible. */
#cmakedefine HAVE_SYS_WAIT_H	1

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H	1

/* uriparser library available */
#cmakedefine HAVE_URIPARSER

/* uuid library available */
#cmakedefine HAVE_UUID

/* Define to 1 if you have the <X11/extensions/Xinerama.h> header file. */
#cmakedefine HAVE_X11_EXTENSIONS_XINERAMA_H	1

/* Define to 1 if you have the <X11/Xaw/XawInit.h> header file. */
#cmakedefine HAVE_X11_XAW_XAWINIT_H	1

/* Define to 1 if you have the <X11/Xmu/Xmu.h> header file. */
#cmakedefine HAVE_X11_XMU_XMU_H	1

/* Build Xenomai kernel threads */
#cmakedefine HAVE_XENOMAI_KERNEL_THREADS

/* Build Xenomai userland threads */
#cmakedefine HAVE_XENOMAI_THREADS

/* Define to 1 if you have the `__sincos' function. */
#cmakedefine HAVE___SINCOS

/* Define to 1 if linux/hidraw.h is usable and defines HIDIOCGRAWINFO */
#cmakedefine HIDRAW_H_USABLE

/* path of global machinekit.ini file */
#define MACHINEKIT_INI	"@INSTALL_SYSCONF_DIR@/machinekit/machinekit.ini"

/* Define to 1 if asm/msr.h is usable and defines rdtscll */
#cmakedefine MSR_H_USABLE

/* Define to the address where bug reports for this package should be sent. */
#cmakedefine PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#cmakedefine PACKAGE_NAME

/* Define to the full name and version of this package. */
#cmakedefine PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#cmakedefine PACKAGE_TARNAME

/* Define to the home page for this package. */
#cmakedefine PACKAGE_URL

/* Define to the version of this package. */
#cmakedefine PACKAGE_VERSION	"@PACKAGE_VERSION@"

/* "RTAI version" */
#cmakedefine RTAI_VERSION

/* directory for IPC sockets and other transient files */
#cmakedefine RUNDIR	"@RUNDIR@"

/* Define to 1 if you have the ANSI C header files. */
#cmakedefine STDC_HEADERS	1

/* build for BeagleBone platform */
#cmakedefine TARGET_PLATFORM_BEAGLEBONE

/* build for Chip platform */
#cmakedefine TARGET_PLATFORM_CHIP

/* build for H3 SoC platform */
#cmakedefine TARGET_PLATFORM_H3

/* build for PC platform */
#cmakedefine TARGET_PLATFORM_PC

/* build for Raspberry Pi platform */
#cmakedefine TARGET_PLATFORM_RASPBERRY

/* build for Socfpga platform */
#cmakedefine TARGET_PLATFORM_SOCFPGA

/* build for Zedboard platform */
#cmakedefine TARGET_PLATFORM_ZEDBOARD

/* build PCI drivers with usermode PCI support */
#cmakedefine USERMODE_PCI

/* use ppdev ioctl instead of inb/outb */
#cmakedefine USE_PORTABLE_PARPORT_IO

/* use shm driver module */
#cmakedefine USE_SHMDRV

/* Xenomai skin ('native' for v2, 'alchemy' for v3) */
#cmakedefine XENOMAI_SKIN	@XENOMAI_SKIN@

/* Xenomai v.2 */
#cmakedefine XENOMAI_V2

/* Define to 1 if the X Window System is missing or not being used. */
#cmakedefine X_DISPLAY_MISSING

/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE
#endif


#endif
